name: release
on:
  push:
    tags:
      - "v*"

jobs:
  wait:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    name: Wait for acceptance tests
    steps:
      - name: Wait for acceptance tests
        id: wait
        uses: "WyriHaximus/github-action-wait-for-status@a0d59308face45c8229ad5aef809d6df5a0c7620" # version v1.8.0
        with:
          ignoreActions: Wait for acceptance tests
          checkInterval: 30
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      status: steps.wait.outputs.status

  release:
    permissions: write-all
    needs:
      - wait
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # version v6.3.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Get tag name
        id: get_tag_name
        run: echo "name=TAG::${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build release notes link
        id: build-release-notes
        run: |
          releaseDate=$(date '+%B-%-d-%Y' | tr '[:upper:]' '[:lower:]')
          releaseVersion=$(echo ${{ steps.get_tag_name.outputs.TAG }} | tr -d '.')
          tmp=$(mktemp -d)
          echo "[Release Notes](https://github.com/keycloak/terraform-provider-keycloak/blob/main/CHANGELOG.md#${releaseVersion}-${releaseDate})" > ${tmp}/release-notes.md
          cat ${tmp}/release-notes.md
          echo "name=NOTES::${tmp}/release-notes.md" >> $GITHUB_OUTPUT

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # version v6.3.0
        with:
          args: release --clean --release-notes=${{ steps.build-release-notes.outputs.NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
